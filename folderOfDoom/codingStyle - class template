/*
 * Numele clasei
 *
 * Informatii despre clasa
 *
 * Copyright
 *
 * Denumirile se fac astfel:
 *  	- clasele si interfetele incep cu litere mari
 *		- metodele si variabilele incep cu litere mici, 
iar primele litere ale cuvintelor interne sa fie litere mari (ex: getFirstNumber)
 *		- constantele se scriu cu majuscule
 */
 
package java.mypackage;

// Importurile din pachete diferite se separa cu o linie
import javax.swing.Timer;
import javax.swing.Icon;

import java.awt.Component;
import java.awt.Container;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class MyClass extends ExistingClass {
	/**
	 * Documentatii despre implementarea clasei
	 * 
	 * Conventii de cod:
	 * - Variabilele statice se declara inaintea celor de instanta
	 * - Variabilele se declara respectand ordinea public, protected, private
	 */

	/** Documentatia despre variabila statica classVar1 */
	public static int classVar1;

	/**
	 * Documentatia despre variabila statica classVar2
	 * care se extinde pe mai multe linii
	 */
	private static Object classVar2;

	/** Documentatia despre variabila de instanta instanceVar1 */
	public Object instanceVar1;

	/** Documentatia despre variabila de instanta instanceVar2 */
	protected int instanceVar2;

	/** Documentatia despre variabila de instanta instanceVar3 */
	private Object[] instanceVar3;


	/**
	 * Documentatia despre constructor
	 */
	public MyClass() {
	// Implementare
	}

	/**
	 * Documentatia despre metoda
	 *
	 * Conventii de cod:
	 * - variabilele sunt declarate doar la inceputul blocurilor de cod
	 * - se foloseste o linie goala:
	 * 		- intre variabilele declarate si prima expresie din metoda
	 * 		- inaintea unui comentariu
	 * - se foloseste spatiu:
	 *		- pentru a separa toti operatorii binari (mai putin .) de operanzi
	 *		- pentru a separa expresiile dintr-un for
	 *		- dupa cast-uri
	 */
	public void codingStyleExamples() {
		char 	var;
		int 	var1;
		Object 	var2;
		
		var1 = function1 (longexpression1, longexpression2, longexpression3, 
						  longexpression4);
		var2 = function2 (longexpression1, 
						  function3(longexpression2, longexpression3));
		
		// indentare in clauza if se face cu 8 spatii, pentru lizibilitate
		if ((condition1 && condition2) || (condition3 && condition4)
				|| !(condition5 && condition6)) {
			Object var3;
			doSomething(var3);
		}
		
		for (int i = 0; i < var1; i++)
			doSomething(i);
		
		do {
			doSomething(var2);
		} while (condition1);
		
		if (condition1) {
			doSomething(var1);
		} else if (condition2) {
			doSomething(var2);
		} else {
			doSomething(var);
		}
	}

	/**
	 * Documentatia despre metoda
	 * @param someParam descrierea_parametrului
	 */
	public void doSomething(Object someParam) {
		// Implementare
	}

	// alte metode
}
